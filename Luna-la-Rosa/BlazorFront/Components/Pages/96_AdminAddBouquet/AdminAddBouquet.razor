@page "/admin-add-bouquet"
@using BLL.DTO.AddOn
@using BLL.DTO.Bouquet
@using BLL.DTO.BouquetFlower
@using BLL.DTO.Flower
@using BLL.DTO.ItemAddOn
@using BlazorFront.Services
@using BlazorFront.Services.Interfaces
@inject IBouquetService BouquetService
@inject IFlowerService FlowerService
@inject IAddOnService AddOnService

@rendermode InteractiveServer

<main class="bouquet-creation">
    <section class="bouquet-form-simple">
        <h2>Створення букета</h2>
        <form>
            <div class="form-row">
                <div class="form-group">
                    <label for="bouquet-name">Назва букета</label>
                    <input type="text" id="bouquet-name" @bind="CurrentBouquet.Name" placeholder="Назва букета">
                </div>
                <div class="form-group">
                    <label for="bouquet-description">Опис букета</label>
                    <input type="text" id="bouquet-description" @bind="CurrentBouquet.Description" placeholder="Опис букета">
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label>Колір</label>
                    <select id="bouquet-color" @bind="CurrentBouquet.MainColor">
                        <option>Червоний</option>
                        <option>Білий</option>
                        <option>Рожевий</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Розмір</label>
                    <div class="radio-options">
                        <label>
                            <input type="radio" name="size" value="Large" @bind:checked="CurrentBouquet.Size"> Великий
                        </label>
                        <label>
                            <input type="radio" name="size" value="Medium" @bind:checked="CurrentBouquet.Size"> Середній
                        </label>
                        <label>
                            <input type="radio" name="size" value="Small" @bind:checked="CurrentBouquet.Size"> Маленький
                        </label>

                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="bouquet-photo">Завантажити фото букета</label>
                    <InputFile OnChange="UploadImage" />

                </div>
            </div>
        </form>
    </section>

    <div class="bouquet-container">
        <!-- Left Column -->
        <div class="left-column">
            <h3>Вибір квітів</h3>
            <div>
                @foreach (var flower in Flowers)
                {
                    <div class="flower-item">
                        <p>@flower.Name (@flower.Price грн)</p>
                        <div class="quantity-control">
                            <button @onclick="() => AddFlower(flower)">+</button>
                        </div>
                    </div>
                }
            </div>
            <h3>Вибір оформлення</h3>
            <div>
                @foreach (var addOn in AddOns)
                {
                    <div class="add-on-item">
                        <p>@addOn.Name (@addOn.Price грн)</p>
                        <div class="quantity-control">
                            <button @onclick="() => AddAddOn(addOn)">+</button>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Right Column -->
        <div class="right-column">
            <h2>Ваш букет:</h2>
            <div>
                @foreach (var flower in SelectedFlowers)
                {
                    <div>
                        <p>@flower.Flower.Name x @flower.Quantity</p>
                    </div>
                }
                @foreach (var addOn in SelectedAddOns)
                {
                    <div>
                        <p>@addOn.AddOn.Name x @addOn.Quantity</p>
                    </div>
                }
            </div>
            <button class="save-button" @onclick="SaveBouquet">Зберегти</button>
        </div>
    </div>
</main>

@code {
    private CreateBouquetDto CurrentBouquet = new CreateBouquetDto
        {
            Size = "Medium" // Встановіть значення за замовчуванням, якщо потрібно
        };

    private CreateBouquetDto NewBouquet = new CreateBouquetDto
    {
        Flowers = new List<BouquetFlowerDto>(),
        AddOns = new List<ItemAddOnDto>()
    };


    private List<FlowerDto> Flowers = new();
    private List<AddOnDto> AddOns = new();
    private List<BouquetFlowerDto> SelectedFlowers = new();
    private List<ItemAddOnDto> SelectedAddOns = new();

    protected override async Task OnInitializedAsync()
    {
        Flowers = (await FlowerService.GetAllFlowersAsync(string.Empty)).ToList();
        AddOns = (await AddOnService.GetAllAddOnsAsync(string.Empty)).ToList();
    }

    private void AddFlower(FlowerDto flower)
    {
        var existing = SelectedFlowers.FirstOrDefault(f => f.FlowerId == flower.Id);
        if (existing != null)
        {
            existing.Quantity++;
        }
        else
        {
            SelectedFlowers.Add(new BouquetFlowerDto { FlowerId = flower.Id, Quantity = 1, Flower = flower });
        }
    }

    private void AddAddOn(AddOnDto addOn)
    {
        var existing = SelectedAddOns.FirstOrDefault(a => a.AddOnId == addOn.Id);
        if (existing != null)
        {
            existing.Quantity++;
        }
        else
        {
            SelectedAddOns.Add(new ItemAddOnDto { AddOnId = addOn.Id, Quantity = 1, AddOn = addOn });
        }
    }

    private async Task SaveBouquet()
    {
        
        NewBouquet.Name = CurrentBouquet.Name;
        Console.WriteLine("name:" + NewBouquet.Name);
        NewBouquet.Description = CurrentBouquet.Description;
        Console.WriteLine("desc:" + NewBouquet.Description);
        NewBouquet.Size = CurrentBouquet.Size;
        Console.WriteLine("size:" + NewBouquet.Size);
        NewBouquet.MainColor = CurrentBouquet.MainColor;
        Console.WriteLine("color:" + NewBouquet.MainColor);
        NewBouquet.Image = CurrentBouquet.Image;
        Console.WriteLine("img:" + NewBouquet.Image);
        NewBouquet.Flowers = SelectedFlowers;
        Console.WriteLine("flow:" + NewBouquet.Flowers);
        NewBouquet.AddOns = SelectedAddOns;
        Console.WriteLine("addons:" + NewBouquet.AddOns);

        if (string.IsNullOrWhiteSpace(NewBouquet.Name) ||
    string.IsNullOrWhiteSpace(NewBouquet.MainColor) ||
    string.IsNullOrWhiteSpace(NewBouquet.Size) ||
    NewBouquet.Image == null)
{
    Console.WriteLine("Заповніть усі обов'язкові поля!");
    return;
}


        // Виклик сервісу для збереження букета
        await BouquetService.AddBouquetAsync(NewBouquet, CancellationToken.None);

        // Очистка форми або перенаправлення
        Console.WriteLine("Букет успішно збережений!");
    }


    private async Task UploadImage(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using var memoryStream = new MemoryStream();
            await file.OpenReadStream().CopyToAsync(memoryStream);
            CurrentBouquet.Image = memoryStream.ToArray();
        }
    }
}
